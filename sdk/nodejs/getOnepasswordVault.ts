// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get details of a vault by either its name or uuid.
 */
export function getOnepasswordVault(args?: GetOnepasswordVaultArgs, opts?: pulumi.InvokeOptions): Promise<GetOnepasswordVaultResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onepassword:index/getOnepasswordVault:getOnepasswordVault", {
        "name": args.name,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getOnepasswordVault.
 */
export interface GetOnepasswordVaultArgs {
    /**
     * The name of the vault to retrieve. This field will be populated with the name of the vault if the vault it looked up by its UUID.
     */
    name?: string;
    /**
     * The UUID of the vault to retrieve. This field will be populated with the UUID of the vault if the vault it looked up by its name.
     */
    uuid?: string;
}

/**
 * A collection of values returned by getOnepasswordVault.
 */
export interface GetOnepasswordVaultResult {
    /**
     * The description of the vault.
     */
    readonly description: string;
    readonly id: string;
    /**
     * The name of the vault to retrieve. This field will be populated with the name of the vault if the vault it looked up by its UUID.
     */
    readonly name: string;
    /**
     * The UUID of the vault to retrieve. This field will be populated with the UUID of the vault if the vault it looked up by its name.
     */
    readonly uuid: string;
}
/**
 * Use this data source to get details of a vault by either its name or uuid.
 */
export function getOnepasswordVaultOutput(args?: GetOnepasswordVaultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnepasswordVaultResult> {
    return pulumi.output(args).apply((a: any) => getOnepasswordVault(a, opts))
}

/**
 * A collection of arguments for invoking getOnepasswordVault.
 */
export interface GetOnepasswordVaultOutputArgs {
    /**
     * The name of the vault to retrieve. This field will be populated with the name of the vault if the vault it looked up by its UUID.
     */
    name?: pulumi.Input<string>;
    /**
     * The UUID of the vault to retrieve. This field will be populated with the UUID of the vault if the vault it looked up by its name.
     */
    uuid?: pulumi.Input<string>;
}
