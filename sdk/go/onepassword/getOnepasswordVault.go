// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onepassword/sdk/go/onepassword/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get details of a vault by either its name or uuid.
func GetOnepasswordVault(ctx *pulumi.Context, args *GetOnepasswordVaultArgs, opts ...pulumi.InvokeOption) (*GetOnepasswordVaultResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOnepasswordVaultResult
	err := ctx.Invoke("onepassword:index/getOnepasswordVault:getOnepasswordVault", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOnepasswordVault.
type GetOnepasswordVaultArgs struct {
	// The name of the vault to retrieve. This field will be populated with the name of the vault if the vault it looked up by its UUID.
	Name *string `pulumi:"name"`
	// The UUID of the vault to retrieve. This field will be populated with the UUID of the vault if the vault it looked up by its name.
	Uuid *string `pulumi:"uuid"`
}

// A collection of values returned by getOnepasswordVault.
type GetOnepasswordVaultResult struct {
	// The description of the vault.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// The name of the vault to retrieve. This field will be populated with the name of the vault if the vault it looked up by its UUID.
	Name string `pulumi:"name"`
	// The UUID of the vault to retrieve. This field will be populated with the UUID of the vault if the vault it looked up by its name.
	Uuid string `pulumi:"uuid"`
}

func GetOnepasswordVaultOutput(ctx *pulumi.Context, args GetOnepasswordVaultOutputArgs, opts ...pulumi.InvokeOption) GetOnepasswordVaultResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOnepasswordVaultResult, error) {
			args := v.(GetOnepasswordVaultArgs)
			r, err := GetOnepasswordVault(ctx, &args, opts...)
			var s GetOnepasswordVaultResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOnepasswordVaultResultOutput)
}

// A collection of arguments for invoking getOnepasswordVault.
type GetOnepasswordVaultOutputArgs struct {
	// The name of the vault to retrieve. This field will be populated with the name of the vault if the vault it looked up by its UUID.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The UUID of the vault to retrieve. This field will be populated with the UUID of the vault if the vault it looked up by its name.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (GetOnepasswordVaultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnepasswordVaultArgs)(nil)).Elem()
}

// A collection of values returned by getOnepasswordVault.
type GetOnepasswordVaultResultOutput struct{ *pulumi.OutputState }

func (GetOnepasswordVaultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnepasswordVaultResult)(nil)).Elem()
}

func (o GetOnepasswordVaultResultOutput) ToGetOnepasswordVaultResultOutput() GetOnepasswordVaultResultOutput {
	return o
}

func (o GetOnepasswordVaultResultOutput) ToGetOnepasswordVaultResultOutputWithContext(ctx context.Context) GetOnepasswordVaultResultOutput {
	return o
}

func (o GetOnepasswordVaultResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnepasswordVaultResult] {
	return pulumix.Output[GetOnepasswordVaultResult]{
		OutputState: o.OutputState,
	}
}

// The description of the vault.
func (o GetOnepasswordVaultResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordVaultResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetOnepasswordVaultResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordVaultResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the vault to retrieve. This field will be populated with the name of the vault if the vault it looked up by its UUID.
func (o GetOnepasswordVaultResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordVaultResult) string { return v.Name }).(pulumi.StringOutput)
}

// The UUID of the vault to retrieve. This field will be populated with the UUID of the vault if the vault it looked up by its name.
func (o GetOnepasswordVaultResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordVaultResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOnepasswordVaultResultOutput{})
}
