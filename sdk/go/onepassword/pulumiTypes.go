// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-onepassword/sdk/go/onepassword/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type OnepasswordItemPasswordRecipe struct {
	// Use digits [0-9] when generating the password.
	Digits *bool `pulumi:"digits"`
	// The length of the password to be generated.
	Length *int `pulumi:"length"`
	// Use letters [a-zA-Z] when generating the password.
	Letters *bool `pulumi:"letters"`
	// Use symbols [!@.-_*] when generating the password.
	Symbols *bool `pulumi:"symbols"`
}

// OnepasswordItemPasswordRecipeInput is an input type that accepts OnepasswordItemPasswordRecipeArgs and OnepasswordItemPasswordRecipeOutput values.
// You can construct a concrete instance of `OnepasswordItemPasswordRecipeInput` via:
//
//	OnepasswordItemPasswordRecipeArgs{...}
type OnepasswordItemPasswordRecipeInput interface {
	pulumi.Input

	ToOnepasswordItemPasswordRecipeOutput() OnepasswordItemPasswordRecipeOutput
	ToOnepasswordItemPasswordRecipeOutputWithContext(context.Context) OnepasswordItemPasswordRecipeOutput
}

type OnepasswordItemPasswordRecipeArgs struct {
	// Use digits [0-9] when generating the password.
	Digits pulumi.BoolPtrInput `pulumi:"digits"`
	// The length of the password to be generated.
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Use letters [a-zA-Z] when generating the password.
	Letters pulumi.BoolPtrInput `pulumi:"letters"`
	// Use symbols [!@.-_*] when generating the password.
	Symbols pulumi.BoolPtrInput `pulumi:"symbols"`
}

func (OnepasswordItemPasswordRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemPasswordRecipe)(nil)).Elem()
}

func (i OnepasswordItemPasswordRecipeArgs) ToOnepasswordItemPasswordRecipeOutput() OnepasswordItemPasswordRecipeOutput {
	return i.ToOnepasswordItemPasswordRecipeOutputWithContext(context.Background())
}

func (i OnepasswordItemPasswordRecipeArgs) ToOnepasswordItemPasswordRecipeOutputWithContext(ctx context.Context) OnepasswordItemPasswordRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemPasswordRecipeOutput)
}

func (i OnepasswordItemPasswordRecipeArgs) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemPasswordRecipe] {
	return pulumix.Output[OnepasswordItemPasswordRecipe]{
		OutputState: i.ToOnepasswordItemPasswordRecipeOutputWithContext(ctx).OutputState,
	}
}

func (i OnepasswordItemPasswordRecipeArgs) ToOnepasswordItemPasswordRecipePtrOutput() OnepasswordItemPasswordRecipePtrOutput {
	return i.ToOnepasswordItemPasswordRecipePtrOutputWithContext(context.Background())
}

func (i OnepasswordItemPasswordRecipeArgs) ToOnepasswordItemPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemPasswordRecipePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemPasswordRecipeOutput).ToOnepasswordItemPasswordRecipePtrOutputWithContext(ctx)
}

// OnepasswordItemPasswordRecipePtrInput is an input type that accepts OnepasswordItemPasswordRecipeArgs, OnepasswordItemPasswordRecipePtr and OnepasswordItemPasswordRecipePtrOutput values.
// You can construct a concrete instance of `OnepasswordItemPasswordRecipePtrInput` via:
//
//	        OnepasswordItemPasswordRecipeArgs{...}
//
//	or:
//
//	        nil
type OnepasswordItemPasswordRecipePtrInput interface {
	pulumi.Input

	ToOnepasswordItemPasswordRecipePtrOutput() OnepasswordItemPasswordRecipePtrOutput
	ToOnepasswordItemPasswordRecipePtrOutputWithContext(context.Context) OnepasswordItemPasswordRecipePtrOutput
}

type onepasswordItemPasswordRecipePtrType OnepasswordItemPasswordRecipeArgs

func OnepasswordItemPasswordRecipePtr(v *OnepasswordItemPasswordRecipeArgs) OnepasswordItemPasswordRecipePtrInput {
	return (*onepasswordItemPasswordRecipePtrType)(v)
}

func (*onepasswordItemPasswordRecipePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnepasswordItemPasswordRecipe)(nil)).Elem()
}

func (i *onepasswordItemPasswordRecipePtrType) ToOnepasswordItemPasswordRecipePtrOutput() OnepasswordItemPasswordRecipePtrOutput {
	return i.ToOnepasswordItemPasswordRecipePtrOutputWithContext(context.Background())
}

func (i *onepasswordItemPasswordRecipePtrType) ToOnepasswordItemPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemPasswordRecipePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemPasswordRecipePtrOutput)
}

func (i *onepasswordItemPasswordRecipePtrType) ToOutput(ctx context.Context) pulumix.Output[*OnepasswordItemPasswordRecipe] {
	return pulumix.Output[*OnepasswordItemPasswordRecipe]{
		OutputState: i.ToOnepasswordItemPasswordRecipePtrOutputWithContext(ctx).OutputState,
	}
}

type OnepasswordItemPasswordRecipeOutput struct{ *pulumi.OutputState }

func (OnepasswordItemPasswordRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemPasswordRecipe)(nil)).Elem()
}

func (o OnepasswordItemPasswordRecipeOutput) ToOnepasswordItemPasswordRecipeOutput() OnepasswordItemPasswordRecipeOutput {
	return o
}

func (o OnepasswordItemPasswordRecipeOutput) ToOnepasswordItemPasswordRecipeOutputWithContext(ctx context.Context) OnepasswordItemPasswordRecipeOutput {
	return o
}

func (o OnepasswordItemPasswordRecipeOutput) ToOnepasswordItemPasswordRecipePtrOutput() OnepasswordItemPasswordRecipePtrOutput {
	return o.ToOnepasswordItemPasswordRecipePtrOutputWithContext(context.Background())
}

func (o OnepasswordItemPasswordRecipeOutput) ToOnepasswordItemPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemPasswordRecipePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnepasswordItemPasswordRecipe) *OnepasswordItemPasswordRecipe {
		return &v
	}).(OnepasswordItemPasswordRecipePtrOutput)
}

func (o OnepasswordItemPasswordRecipeOutput) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemPasswordRecipe] {
	return pulumix.Output[OnepasswordItemPasswordRecipe]{
		OutputState: o.OutputState,
	}
}

// Use digits [0-9] when generating the password.
func (o OnepasswordItemPasswordRecipeOutput) Digits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnepasswordItemPasswordRecipe) *bool { return v.Digits }).(pulumi.BoolPtrOutput)
}

// The length of the password to be generated.
func (o OnepasswordItemPasswordRecipeOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnepasswordItemPasswordRecipe) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Use letters [a-zA-Z] when generating the password.
func (o OnepasswordItemPasswordRecipeOutput) Letters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnepasswordItemPasswordRecipe) *bool { return v.Letters }).(pulumi.BoolPtrOutput)
}

// Use symbols [!@.-_*] when generating the password.
func (o OnepasswordItemPasswordRecipeOutput) Symbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnepasswordItemPasswordRecipe) *bool { return v.Symbols }).(pulumi.BoolPtrOutput)
}

type OnepasswordItemPasswordRecipePtrOutput struct{ *pulumi.OutputState }

func (OnepasswordItemPasswordRecipePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnepasswordItemPasswordRecipe)(nil)).Elem()
}

func (o OnepasswordItemPasswordRecipePtrOutput) ToOnepasswordItemPasswordRecipePtrOutput() OnepasswordItemPasswordRecipePtrOutput {
	return o
}

func (o OnepasswordItemPasswordRecipePtrOutput) ToOnepasswordItemPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemPasswordRecipePtrOutput {
	return o
}

func (o OnepasswordItemPasswordRecipePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OnepasswordItemPasswordRecipe] {
	return pulumix.Output[*OnepasswordItemPasswordRecipe]{
		OutputState: o.OutputState,
	}
}

func (o OnepasswordItemPasswordRecipePtrOutput) Elem() OnepasswordItemPasswordRecipeOutput {
	return o.ApplyT(func(v *OnepasswordItemPasswordRecipe) OnepasswordItemPasswordRecipe {
		if v != nil {
			return *v
		}
		var ret OnepasswordItemPasswordRecipe
		return ret
	}).(OnepasswordItemPasswordRecipeOutput)
}

// Use digits [0-9] when generating the password.
func (o OnepasswordItemPasswordRecipePtrOutput) Digits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemPasswordRecipe) *bool {
		if v == nil {
			return nil
		}
		return v.Digits
	}).(pulumi.BoolPtrOutput)
}

// The length of the password to be generated.
func (o OnepasswordItemPasswordRecipePtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemPasswordRecipe) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Use letters [a-zA-Z] when generating the password.
func (o OnepasswordItemPasswordRecipePtrOutput) Letters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemPasswordRecipe) *bool {
		if v == nil {
			return nil
		}
		return v.Letters
	}).(pulumi.BoolPtrOutput)
}

// Use symbols [!@.-_*] when generating the password.
func (o OnepasswordItemPasswordRecipePtrOutput) Symbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemPasswordRecipe) *bool {
		if v == nil {
			return nil
		}
		return v.Symbols
	}).(pulumi.BoolPtrOutput)
}

type OnepasswordItemSection struct {
	// A list of custom fields in the section.
	Fields []OnepasswordItemSectionField `pulumi:"fields"`
	// A unique identifier for the section.
	Id *string `pulumi:"id"`
	// The label for the section.
	Label string `pulumi:"label"`
}

// OnepasswordItemSectionInput is an input type that accepts OnepasswordItemSectionArgs and OnepasswordItemSectionOutput values.
// You can construct a concrete instance of `OnepasswordItemSectionInput` via:
//
//	OnepasswordItemSectionArgs{...}
type OnepasswordItemSectionInput interface {
	pulumi.Input

	ToOnepasswordItemSectionOutput() OnepasswordItemSectionOutput
	ToOnepasswordItemSectionOutputWithContext(context.Context) OnepasswordItemSectionOutput
}

type OnepasswordItemSectionArgs struct {
	// A list of custom fields in the section.
	Fields OnepasswordItemSectionFieldArrayInput `pulumi:"fields"`
	// A unique identifier for the section.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The label for the section.
	Label pulumi.StringInput `pulumi:"label"`
}

func (OnepasswordItemSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemSection)(nil)).Elem()
}

func (i OnepasswordItemSectionArgs) ToOnepasswordItemSectionOutput() OnepasswordItemSectionOutput {
	return i.ToOnepasswordItemSectionOutputWithContext(context.Background())
}

func (i OnepasswordItemSectionArgs) ToOnepasswordItemSectionOutputWithContext(ctx context.Context) OnepasswordItemSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemSectionOutput)
}

func (i OnepasswordItemSectionArgs) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemSection] {
	return pulumix.Output[OnepasswordItemSection]{
		OutputState: i.ToOnepasswordItemSectionOutputWithContext(ctx).OutputState,
	}
}

// OnepasswordItemSectionArrayInput is an input type that accepts OnepasswordItemSectionArray and OnepasswordItemSectionArrayOutput values.
// You can construct a concrete instance of `OnepasswordItemSectionArrayInput` via:
//
//	OnepasswordItemSectionArray{ OnepasswordItemSectionArgs{...} }
type OnepasswordItemSectionArrayInput interface {
	pulumi.Input

	ToOnepasswordItemSectionArrayOutput() OnepasswordItemSectionArrayOutput
	ToOnepasswordItemSectionArrayOutputWithContext(context.Context) OnepasswordItemSectionArrayOutput
}

type OnepasswordItemSectionArray []OnepasswordItemSectionInput

func (OnepasswordItemSectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnepasswordItemSection)(nil)).Elem()
}

func (i OnepasswordItemSectionArray) ToOnepasswordItemSectionArrayOutput() OnepasswordItemSectionArrayOutput {
	return i.ToOnepasswordItemSectionArrayOutputWithContext(context.Background())
}

func (i OnepasswordItemSectionArray) ToOnepasswordItemSectionArrayOutputWithContext(ctx context.Context) OnepasswordItemSectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemSectionArrayOutput)
}

func (i OnepasswordItemSectionArray) ToOutput(ctx context.Context) pulumix.Output[[]OnepasswordItemSection] {
	return pulumix.Output[[]OnepasswordItemSection]{
		OutputState: i.ToOnepasswordItemSectionArrayOutputWithContext(ctx).OutputState,
	}
}

type OnepasswordItemSectionOutput struct{ *pulumi.OutputState }

func (OnepasswordItemSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemSection)(nil)).Elem()
}

func (o OnepasswordItemSectionOutput) ToOnepasswordItemSectionOutput() OnepasswordItemSectionOutput {
	return o
}

func (o OnepasswordItemSectionOutput) ToOnepasswordItemSectionOutputWithContext(ctx context.Context) OnepasswordItemSectionOutput {
	return o
}

func (o OnepasswordItemSectionOutput) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemSection] {
	return pulumix.Output[OnepasswordItemSection]{
		OutputState: o.OutputState,
	}
}

// A list of custom fields in the section.
func (o OnepasswordItemSectionOutput) Fields() OnepasswordItemSectionFieldArrayOutput {
	return o.ApplyT(func(v OnepasswordItemSection) []OnepasswordItemSectionField { return v.Fields }).(OnepasswordItemSectionFieldArrayOutput)
}

// A unique identifier for the section.
func (o OnepasswordItemSectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The label for the section.
func (o OnepasswordItemSectionOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v OnepasswordItemSection) string { return v.Label }).(pulumi.StringOutput)
}

type OnepasswordItemSectionArrayOutput struct{ *pulumi.OutputState }

func (OnepasswordItemSectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnepasswordItemSection)(nil)).Elem()
}

func (o OnepasswordItemSectionArrayOutput) ToOnepasswordItemSectionArrayOutput() OnepasswordItemSectionArrayOutput {
	return o
}

func (o OnepasswordItemSectionArrayOutput) ToOnepasswordItemSectionArrayOutputWithContext(ctx context.Context) OnepasswordItemSectionArrayOutput {
	return o
}

func (o OnepasswordItemSectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OnepasswordItemSection] {
	return pulumix.Output[[]OnepasswordItemSection]{
		OutputState: o.OutputState,
	}
}

func (o OnepasswordItemSectionArrayOutput) Index(i pulumi.IntInput) OnepasswordItemSectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OnepasswordItemSection {
		return vs[0].([]OnepasswordItemSection)[vs[1].(int)]
	}).(OnepasswordItemSectionOutput)
}

type OnepasswordItemSectionField struct {
	// A unique identifier for the field.
	Id *string `pulumi:"id"`
	// The label for the field.
	Label string `pulumi:"label"`
	// Password for this item.
	PasswordRecipe *OnepasswordItemSectionFieldPasswordRecipe `pulumi:"passwordRecipe"`
	// Purpose indicates this is a special field: a username, password, or notes field. One of ["USERNAME" "PASSWORD" "NOTES"]
	Purpose *string `pulumi:"purpose"`
	// The type of value stored in the field. One of ["STRING" "EMAIL" "CONCEALED" "URL" "OTP" "DATE" "MONTH_YEAR" "MENU"]
	Type *string `pulumi:"type"`
	// The value of the field.
	Value *string `pulumi:"value"`
}

// OnepasswordItemSectionFieldInput is an input type that accepts OnepasswordItemSectionFieldArgs and OnepasswordItemSectionFieldOutput values.
// You can construct a concrete instance of `OnepasswordItemSectionFieldInput` via:
//
//	OnepasswordItemSectionFieldArgs{...}
type OnepasswordItemSectionFieldInput interface {
	pulumi.Input

	ToOnepasswordItemSectionFieldOutput() OnepasswordItemSectionFieldOutput
	ToOnepasswordItemSectionFieldOutputWithContext(context.Context) OnepasswordItemSectionFieldOutput
}

type OnepasswordItemSectionFieldArgs struct {
	// A unique identifier for the field.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The label for the field.
	Label pulumi.StringInput `pulumi:"label"`
	// Password for this item.
	PasswordRecipe OnepasswordItemSectionFieldPasswordRecipePtrInput `pulumi:"passwordRecipe"`
	// Purpose indicates this is a special field: a username, password, or notes field. One of ["USERNAME" "PASSWORD" "NOTES"]
	Purpose pulumi.StringPtrInput `pulumi:"purpose"`
	// The type of value stored in the field. One of ["STRING" "EMAIL" "CONCEALED" "URL" "OTP" "DATE" "MONTH_YEAR" "MENU"]
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the field.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (OnepasswordItemSectionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemSectionField)(nil)).Elem()
}

func (i OnepasswordItemSectionFieldArgs) ToOnepasswordItemSectionFieldOutput() OnepasswordItemSectionFieldOutput {
	return i.ToOnepasswordItemSectionFieldOutputWithContext(context.Background())
}

func (i OnepasswordItemSectionFieldArgs) ToOnepasswordItemSectionFieldOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemSectionFieldOutput)
}

func (i OnepasswordItemSectionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemSectionField] {
	return pulumix.Output[OnepasswordItemSectionField]{
		OutputState: i.ToOnepasswordItemSectionFieldOutputWithContext(ctx).OutputState,
	}
}

// OnepasswordItemSectionFieldArrayInput is an input type that accepts OnepasswordItemSectionFieldArray and OnepasswordItemSectionFieldArrayOutput values.
// You can construct a concrete instance of `OnepasswordItemSectionFieldArrayInput` via:
//
//	OnepasswordItemSectionFieldArray{ OnepasswordItemSectionFieldArgs{...} }
type OnepasswordItemSectionFieldArrayInput interface {
	pulumi.Input

	ToOnepasswordItemSectionFieldArrayOutput() OnepasswordItemSectionFieldArrayOutput
	ToOnepasswordItemSectionFieldArrayOutputWithContext(context.Context) OnepasswordItemSectionFieldArrayOutput
}

type OnepasswordItemSectionFieldArray []OnepasswordItemSectionFieldInput

func (OnepasswordItemSectionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnepasswordItemSectionField)(nil)).Elem()
}

func (i OnepasswordItemSectionFieldArray) ToOnepasswordItemSectionFieldArrayOutput() OnepasswordItemSectionFieldArrayOutput {
	return i.ToOnepasswordItemSectionFieldArrayOutputWithContext(context.Background())
}

func (i OnepasswordItemSectionFieldArray) ToOnepasswordItemSectionFieldArrayOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemSectionFieldArrayOutput)
}

func (i OnepasswordItemSectionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]OnepasswordItemSectionField] {
	return pulumix.Output[[]OnepasswordItemSectionField]{
		OutputState: i.ToOnepasswordItemSectionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type OnepasswordItemSectionFieldOutput struct{ *pulumi.OutputState }

func (OnepasswordItemSectionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemSectionField)(nil)).Elem()
}

func (o OnepasswordItemSectionFieldOutput) ToOnepasswordItemSectionFieldOutput() OnepasswordItemSectionFieldOutput {
	return o
}

func (o OnepasswordItemSectionFieldOutput) ToOnepasswordItemSectionFieldOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldOutput {
	return o
}

func (o OnepasswordItemSectionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemSectionField] {
	return pulumix.Output[OnepasswordItemSectionField]{
		OutputState: o.OutputState,
	}
}

// A unique identifier for the field.
func (o OnepasswordItemSectionFieldOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionField) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The label for the field.
func (o OnepasswordItemSectionFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v OnepasswordItemSectionField) string { return v.Label }).(pulumi.StringOutput)
}

// Password for this item.
func (o OnepasswordItemSectionFieldOutput) PasswordRecipe() OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionField) *OnepasswordItemSectionFieldPasswordRecipe {
		return v.PasswordRecipe
	}).(OnepasswordItemSectionFieldPasswordRecipePtrOutput)
}

// Purpose indicates this is a special field: a username, password, or notes field. One of ["USERNAME" "PASSWORD" "NOTES"]
func (o OnepasswordItemSectionFieldOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionField) *string { return v.Purpose }).(pulumi.StringPtrOutput)
}

// The type of value stored in the field. One of ["STRING" "EMAIL" "CONCEALED" "URL" "OTP" "DATE" "MONTH_YEAR" "MENU"]
func (o OnepasswordItemSectionFieldOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionField) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the field.
func (o OnepasswordItemSectionFieldOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionField) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type OnepasswordItemSectionFieldArrayOutput struct{ *pulumi.OutputState }

func (OnepasswordItemSectionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnepasswordItemSectionField)(nil)).Elem()
}

func (o OnepasswordItemSectionFieldArrayOutput) ToOnepasswordItemSectionFieldArrayOutput() OnepasswordItemSectionFieldArrayOutput {
	return o
}

func (o OnepasswordItemSectionFieldArrayOutput) ToOnepasswordItemSectionFieldArrayOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldArrayOutput {
	return o
}

func (o OnepasswordItemSectionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OnepasswordItemSectionField] {
	return pulumix.Output[[]OnepasswordItemSectionField]{
		OutputState: o.OutputState,
	}
}

func (o OnepasswordItemSectionFieldArrayOutput) Index(i pulumi.IntInput) OnepasswordItemSectionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OnepasswordItemSectionField {
		return vs[0].([]OnepasswordItemSectionField)[vs[1].(int)]
	}).(OnepasswordItemSectionFieldOutput)
}

type OnepasswordItemSectionFieldPasswordRecipe struct {
	// Use digits [0-9] when generating the password.
	Digits *bool `pulumi:"digits"`
	// The length of the password to be generated.
	Length *int `pulumi:"length"`
	// Use letters [a-zA-Z] when generating the password.
	Letters *bool `pulumi:"letters"`
	// Use symbols [!@.-_*] when generating the password.
	Symbols *bool `pulumi:"symbols"`
}

// OnepasswordItemSectionFieldPasswordRecipeInput is an input type that accepts OnepasswordItemSectionFieldPasswordRecipeArgs and OnepasswordItemSectionFieldPasswordRecipeOutput values.
// You can construct a concrete instance of `OnepasswordItemSectionFieldPasswordRecipeInput` via:
//
//	OnepasswordItemSectionFieldPasswordRecipeArgs{...}
type OnepasswordItemSectionFieldPasswordRecipeInput interface {
	pulumi.Input

	ToOnepasswordItemSectionFieldPasswordRecipeOutput() OnepasswordItemSectionFieldPasswordRecipeOutput
	ToOnepasswordItemSectionFieldPasswordRecipeOutputWithContext(context.Context) OnepasswordItemSectionFieldPasswordRecipeOutput
}

type OnepasswordItemSectionFieldPasswordRecipeArgs struct {
	// Use digits [0-9] when generating the password.
	Digits pulumi.BoolPtrInput `pulumi:"digits"`
	// The length of the password to be generated.
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Use letters [a-zA-Z] when generating the password.
	Letters pulumi.BoolPtrInput `pulumi:"letters"`
	// Use symbols [!@.-_*] when generating the password.
	Symbols pulumi.BoolPtrInput `pulumi:"symbols"`
}

func (OnepasswordItemSectionFieldPasswordRecipeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemSectionFieldPasswordRecipe)(nil)).Elem()
}

func (i OnepasswordItemSectionFieldPasswordRecipeArgs) ToOnepasswordItemSectionFieldPasswordRecipeOutput() OnepasswordItemSectionFieldPasswordRecipeOutput {
	return i.ToOnepasswordItemSectionFieldPasswordRecipeOutputWithContext(context.Background())
}

func (i OnepasswordItemSectionFieldPasswordRecipeArgs) ToOnepasswordItemSectionFieldPasswordRecipeOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldPasswordRecipeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemSectionFieldPasswordRecipeOutput)
}

func (i OnepasswordItemSectionFieldPasswordRecipeArgs) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemSectionFieldPasswordRecipe] {
	return pulumix.Output[OnepasswordItemSectionFieldPasswordRecipe]{
		OutputState: i.ToOnepasswordItemSectionFieldPasswordRecipeOutputWithContext(ctx).OutputState,
	}
}

func (i OnepasswordItemSectionFieldPasswordRecipeArgs) ToOnepasswordItemSectionFieldPasswordRecipePtrOutput() OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return i.ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(context.Background())
}

func (i OnepasswordItemSectionFieldPasswordRecipeArgs) ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemSectionFieldPasswordRecipeOutput).ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(ctx)
}

// OnepasswordItemSectionFieldPasswordRecipePtrInput is an input type that accepts OnepasswordItemSectionFieldPasswordRecipeArgs, OnepasswordItemSectionFieldPasswordRecipePtr and OnepasswordItemSectionFieldPasswordRecipePtrOutput values.
// You can construct a concrete instance of `OnepasswordItemSectionFieldPasswordRecipePtrInput` via:
//
//	        OnepasswordItemSectionFieldPasswordRecipeArgs{...}
//
//	or:
//
//	        nil
type OnepasswordItemSectionFieldPasswordRecipePtrInput interface {
	pulumi.Input

	ToOnepasswordItemSectionFieldPasswordRecipePtrOutput() OnepasswordItemSectionFieldPasswordRecipePtrOutput
	ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(context.Context) OnepasswordItemSectionFieldPasswordRecipePtrOutput
}

type onepasswordItemSectionFieldPasswordRecipePtrType OnepasswordItemSectionFieldPasswordRecipeArgs

func OnepasswordItemSectionFieldPasswordRecipePtr(v *OnepasswordItemSectionFieldPasswordRecipeArgs) OnepasswordItemSectionFieldPasswordRecipePtrInput {
	return (*onepasswordItemSectionFieldPasswordRecipePtrType)(v)
}

func (*onepasswordItemSectionFieldPasswordRecipePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnepasswordItemSectionFieldPasswordRecipe)(nil)).Elem()
}

func (i *onepasswordItemSectionFieldPasswordRecipePtrType) ToOnepasswordItemSectionFieldPasswordRecipePtrOutput() OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return i.ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(context.Background())
}

func (i *onepasswordItemSectionFieldPasswordRecipePtrType) ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnepasswordItemSectionFieldPasswordRecipePtrOutput)
}

func (i *onepasswordItemSectionFieldPasswordRecipePtrType) ToOutput(ctx context.Context) pulumix.Output[*OnepasswordItemSectionFieldPasswordRecipe] {
	return pulumix.Output[*OnepasswordItemSectionFieldPasswordRecipe]{
		OutputState: i.ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(ctx).OutputState,
	}
}

type OnepasswordItemSectionFieldPasswordRecipeOutput struct{ *pulumi.OutputState }

func (OnepasswordItemSectionFieldPasswordRecipeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnepasswordItemSectionFieldPasswordRecipe)(nil)).Elem()
}

func (o OnepasswordItemSectionFieldPasswordRecipeOutput) ToOnepasswordItemSectionFieldPasswordRecipeOutput() OnepasswordItemSectionFieldPasswordRecipeOutput {
	return o
}

func (o OnepasswordItemSectionFieldPasswordRecipeOutput) ToOnepasswordItemSectionFieldPasswordRecipeOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldPasswordRecipeOutput {
	return o
}

func (o OnepasswordItemSectionFieldPasswordRecipeOutput) ToOnepasswordItemSectionFieldPasswordRecipePtrOutput() OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return o.ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(context.Background())
}

func (o OnepasswordItemSectionFieldPasswordRecipeOutput) ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnepasswordItemSectionFieldPasswordRecipe) *OnepasswordItemSectionFieldPasswordRecipe {
		return &v
	}).(OnepasswordItemSectionFieldPasswordRecipePtrOutput)
}

func (o OnepasswordItemSectionFieldPasswordRecipeOutput) ToOutput(ctx context.Context) pulumix.Output[OnepasswordItemSectionFieldPasswordRecipe] {
	return pulumix.Output[OnepasswordItemSectionFieldPasswordRecipe]{
		OutputState: o.OutputState,
	}
}

// Use digits [0-9] when generating the password.
func (o OnepasswordItemSectionFieldPasswordRecipeOutput) Digits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionFieldPasswordRecipe) *bool { return v.Digits }).(pulumi.BoolPtrOutput)
}

// The length of the password to be generated.
func (o OnepasswordItemSectionFieldPasswordRecipeOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionFieldPasswordRecipe) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Use letters [a-zA-Z] when generating the password.
func (o OnepasswordItemSectionFieldPasswordRecipeOutput) Letters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionFieldPasswordRecipe) *bool { return v.Letters }).(pulumi.BoolPtrOutput)
}

// Use symbols [!@.-_*] when generating the password.
func (o OnepasswordItemSectionFieldPasswordRecipeOutput) Symbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnepasswordItemSectionFieldPasswordRecipe) *bool { return v.Symbols }).(pulumi.BoolPtrOutput)
}

type OnepasswordItemSectionFieldPasswordRecipePtrOutput struct{ *pulumi.OutputState }

func (OnepasswordItemSectionFieldPasswordRecipePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnepasswordItemSectionFieldPasswordRecipe)(nil)).Elem()
}

func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) ToOnepasswordItemSectionFieldPasswordRecipePtrOutput() OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return o
}

func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) ToOnepasswordItemSectionFieldPasswordRecipePtrOutputWithContext(ctx context.Context) OnepasswordItemSectionFieldPasswordRecipePtrOutput {
	return o
}

func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OnepasswordItemSectionFieldPasswordRecipe] {
	return pulumix.Output[*OnepasswordItemSectionFieldPasswordRecipe]{
		OutputState: o.OutputState,
	}
}

func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) Elem() OnepasswordItemSectionFieldPasswordRecipeOutput {
	return o.ApplyT(func(v *OnepasswordItemSectionFieldPasswordRecipe) OnepasswordItemSectionFieldPasswordRecipe {
		if v != nil {
			return *v
		}
		var ret OnepasswordItemSectionFieldPasswordRecipe
		return ret
	}).(OnepasswordItemSectionFieldPasswordRecipeOutput)
}

// Use digits [0-9] when generating the password.
func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) Digits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemSectionFieldPasswordRecipe) *bool {
		if v == nil {
			return nil
		}
		return v.Digits
	}).(pulumi.BoolPtrOutput)
}

// The length of the password to be generated.
func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemSectionFieldPasswordRecipe) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Use letters [a-zA-Z] when generating the password.
func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) Letters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemSectionFieldPasswordRecipe) *bool {
		if v == nil {
			return nil
		}
		return v.Letters
	}).(pulumi.BoolPtrOutput)
}

// Use symbols [!@.-_*] when generating the password.
func (o OnepasswordItemSectionFieldPasswordRecipePtrOutput) Symbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnepasswordItemSectionFieldPasswordRecipe) *bool {
		if v == nil {
			return nil
		}
		return v.Symbols
	}).(pulumi.BoolPtrOutput)
}

type GetOnepasswordItemSection struct {
	Fields []GetOnepasswordItemSectionField `pulumi:"fields"`
	Id     string                           `pulumi:"id"`
	Label  string                           `pulumi:"label"`
}

// GetOnepasswordItemSectionInput is an input type that accepts GetOnepasswordItemSectionArgs and GetOnepasswordItemSectionOutput values.
// You can construct a concrete instance of `GetOnepasswordItemSectionInput` via:
//
//	GetOnepasswordItemSectionArgs{...}
type GetOnepasswordItemSectionInput interface {
	pulumi.Input

	ToGetOnepasswordItemSectionOutput() GetOnepasswordItemSectionOutput
	ToGetOnepasswordItemSectionOutputWithContext(context.Context) GetOnepasswordItemSectionOutput
}

type GetOnepasswordItemSectionArgs struct {
	Fields GetOnepasswordItemSectionFieldArrayInput `pulumi:"fields"`
	Id     pulumi.StringInput                       `pulumi:"id"`
	Label  pulumi.StringInput                       `pulumi:"label"`
}

func (GetOnepasswordItemSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnepasswordItemSection)(nil)).Elem()
}

func (i GetOnepasswordItemSectionArgs) ToGetOnepasswordItemSectionOutput() GetOnepasswordItemSectionOutput {
	return i.ToGetOnepasswordItemSectionOutputWithContext(context.Background())
}

func (i GetOnepasswordItemSectionArgs) ToGetOnepasswordItemSectionOutputWithContext(ctx context.Context) GetOnepasswordItemSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnepasswordItemSectionOutput)
}

func (i GetOnepasswordItemSectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnepasswordItemSection] {
	return pulumix.Output[GetOnepasswordItemSection]{
		OutputState: i.ToGetOnepasswordItemSectionOutputWithContext(ctx).OutputState,
	}
}

// GetOnepasswordItemSectionArrayInput is an input type that accepts GetOnepasswordItemSectionArray and GetOnepasswordItemSectionArrayOutput values.
// You can construct a concrete instance of `GetOnepasswordItemSectionArrayInput` via:
//
//	GetOnepasswordItemSectionArray{ GetOnepasswordItemSectionArgs{...} }
type GetOnepasswordItemSectionArrayInput interface {
	pulumi.Input

	ToGetOnepasswordItemSectionArrayOutput() GetOnepasswordItemSectionArrayOutput
	ToGetOnepasswordItemSectionArrayOutputWithContext(context.Context) GetOnepasswordItemSectionArrayOutput
}

type GetOnepasswordItemSectionArray []GetOnepasswordItemSectionInput

func (GetOnepasswordItemSectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnepasswordItemSection)(nil)).Elem()
}

func (i GetOnepasswordItemSectionArray) ToGetOnepasswordItemSectionArrayOutput() GetOnepasswordItemSectionArrayOutput {
	return i.ToGetOnepasswordItemSectionArrayOutputWithContext(context.Background())
}

func (i GetOnepasswordItemSectionArray) ToGetOnepasswordItemSectionArrayOutputWithContext(ctx context.Context) GetOnepasswordItemSectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnepasswordItemSectionArrayOutput)
}

func (i GetOnepasswordItemSectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnepasswordItemSection] {
	return pulumix.Output[[]GetOnepasswordItemSection]{
		OutputState: i.ToGetOnepasswordItemSectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnepasswordItemSectionOutput struct{ *pulumi.OutputState }

func (GetOnepasswordItemSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnepasswordItemSection)(nil)).Elem()
}

func (o GetOnepasswordItemSectionOutput) ToGetOnepasswordItemSectionOutput() GetOnepasswordItemSectionOutput {
	return o
}

func (o GetOnepasswordItemSectionOutput) ToGetOnepasswordItemSectionOutputWithContext(ctx context.Context) GetOnepasswordItemSectionOutput {
	return o
}

func (o GetOnepasswordItemSectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnepasswordItemSection] {
	return pulumix.Output[GetOnepasswordItemSection]{
		OutputState: o.OutputState,
	}
}

func (o GetOnepasswordItemSectionOutput) Fields() GetOnepasswordItemSectionFieldArrayOutput {
	return o.ApplyT(func(v GetOnepasswordItemSection) []GetOnepasswordItemSectionField { return v.Fields }).(GetOnepasswordItemSectionFieldArrayOutput)
}

func (o GetOnepasswordItemSectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordItemSection) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOnepasswordItemSectionOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordItemSection) string { return v.Label }).(pulumi.StringOutput)
}

type GetOnepasswordItemSectionArrayOutput struct{ *pulumi.OutputState }

func (GetOnepasswordItemSectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnepasswordItemSection)(nil)).Elem()
}

func (o GetOnepasswordItemSectionArrayOutput) ToGetOnepasswordItemSectionArrayOutput() GetOnepasswordItemSectionArrayOutput {
	return o
}

func (o GetOnepasswordItemSectionArrayOutput) ToGetOnepasswordItemSectionArrayOutputWithContext(ctx context.Context) GetOnepasswordItemSectionArrayOutput {
	return o
}

func (o GetOnepasswordItemSectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnepasswordItemSection] {
	return pulumix.Output[[]GetOnepasswordItemSection]{
		OutputState: o.OutputState,
	}
}

func (o GetOnepasswordItemSectionArrayOutput) Index(i pulumi.IntInput) GetOnepasswordItemSectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnepasswordItemSection {
		return vs[0].([]GetOnepasswordItemSection)[vs[1].(int)]
	}).(GetOnepasswordItemSectionOutput)
}

type GetOnepasswordItemSectionField struct {
	Id      string `pulumi:"id"`
	Label   string `pulumi:"label"`
	Purpose string `pulumi:"purpose"`
	// (Only applies to the database category) The type of database. One of ["db2" "filemaker" "msaccess" "mssql" "mysql" "oracle" "postgresql" "sqlite" "other"]
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// GetOnepasswordItemSectionFieldInput is an input type that accepts GetOnepasswordItemSectionFieldArgs and GetOnepasswordItemSectionFieldOutput values.
// You can construct a concrete instance of `GetOnepasswordItemSectionFieldInput` via:
//
//	GetOnepasswordItemSectionFieldArgs{...}
type GetOnepasswordItemSectionFieldInput interface {
	pulumi.Input

	ToGetOnepasswordItemSectionFieldOutput() GetOnepasswordItemSectionFieldOutput
	ToGetOnepasswordItemSectionFieldOutputWithContext(context.Context) GetOnepasswordItemSectionFieldOutput
}

type GetOnepasswordItemSectionFieldArgs struct {
	Id      pulumi.StringInput `pulumi:"id"`
	Label   pulumi.StringInput `pulumi:"label"`
	Purpose pulumi.StringInput `pulumi:"purpose"`
	// (Only applies to the database category) The type of database. One of ["db2" "filemaker" "msaccess" "mssql" "mysql" "oracle" "postgresql" "sqlite" "other"]
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetOnepasswordItemSectionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnepasswordItemSectionField)(nil)).Elem()
}

func (i GetOnepasswordItemSectionFieldArgs) ToGetOnepasswordItemSectionFieldOutput() GetOnepasswordItemSectionFieldOutput {
	return i.ToGetOnepasswordItemSectionFieldOutputWithContext(context.Background())
}

func (i GetOnepasswordItemSectionFieldArgs) ToGetOnepasswordItemSectionFieldOutputWithContext(ctx context.Context) GetOnepasswordItemSectionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnepasswordItemSectionFieldOutput)
}

func (i GetOnepasswordItemSectionFieldArgs) ToOutput(ctx context.Context) pulumix.Output[GetOnepasswordItemSectionField] {
	return pulumix.Output[GetOnepasswordItemSectionField]{
		OutputState: i.ToGetOnepasswordItemSectionFieldOutputWithContext(ctx).OutputState,
	}
}

// GetOnepasswordItemSectionFieldArrayInput is an input type that accepts GetOnepasswordItemSectionFieldArray and GetOnepasswordItemSectionFieldArrayOutput values.
// You can construct a concrete instance of `GetOnepasswordItemSectionFieldArrayInput` via:
//
//	GetOnepasswordItemSectionFieldArray{ GetOnepasswordItemSectionFieldArgs{...} }
type GetOnepasswordItemSectionFieldArrayInput interface {
	pulumi.Input

	ToGetOnepasswordItemSectionFieldArrayOutput() GetOnepasswordItemSectionFieldArrayOutput
	ToGetOnepasswordItemSectionFieldArrayOutputWithContext(context.Context) GetOnepasswordItemSectionFieldArrayOutput
}

type GetOnepasswordItemSectionFieldArray []GetOnepasswordItemSectionFieldInput

func (GetOnepasswordItemSectionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnepasswordItemSectionField)(nil)).Elem()
}

func (i GetOnepasswordItemSectionFieldArray) ToGetOnepasswordItemSectionFieldArrayOutput() GetOnepasswordItemSectionFieldArrayOutput {
	return i.ToGetOnepasswordItemSectionFieldArrayOutputWithContext(context.Background())
}

func (i GetOnepasswordItemSectionFieldArray) ToGetOnepasswordItemSectionFieldArrayOutputWithContext(ctx context.Context) GetOnepasswordItemSectionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnepasswordItemSectionFieldArrayOutput)
}

func (i GetOnepasswordItemSectionFieldArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOnepasswordItemSectionField] {
	return pulumix.Output[[]GetOnepasswordItemSectionField]{
		OutputState: i.ToGetOnepasswordItemSectionFieldArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOnepasswordItemSectionFieldOutput struct{ *pulumi.OutputState }

func (GetOnepasswordItemSectionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnepasswordItemSectionField)(nil)).Elem()
}

func (o GetOnepasswordItemSectionFieldOutput) ToGetOnepasswordItemSectionFieldOutput() GetOnepasswordItemSectionFieldOutput {
	return o
}

func (o GetOnepasswordItemSectionFieldOutput) ToGetOnepasswordItemSectionFieldOutputWithContext(ctx context.Context) GetOnepasswordItemSectionFieldOutput {
	return o
}

func (o GetOnepasswordItemSectionFieldOutput) ToOutput(ctx context.Context) pulumix.Output[GetOnepasswordItemSectionField] {
	return pulumix.Output[GetOnepasswordItemSectionField]{
		OutputState: o.OutputState,
	}
}

func (o GetOnepasswordItemSectionFieldOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordItemSectionField) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOnepasswordItemSectionFieldOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordItemSectionField) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetOnepasswordItemSectionFieldOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordItemSectionField) string { return v.Purpose }).(pulumi.StringOutput)
}

// (Only applies to the database category) The type of database. One of ["db2" "filemaker" "msaccess" "mssql" "mysql" "oracle" "postgresql" "sqlite" "other"]
func (o GetOnepasswordItemSectionFieldOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordItemSectionField) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetOnepasswordItemSectionFieldOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnepasswordItemSectionField) string { return v.Value }).(pulumi.StringOutput)
}

type GetOnepasswordItemSectionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetOnepasswordItemSectionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnepasswordItemSectionField)(nil)).Elem()
}

func (o GetOnepasswordItemSectionFieldArrayOutput) ToGetOnepasswordItemSectionFieldArrayOutput() GetOnepasswordItemSectionFieldArrayOutput {
	return o
}

func (o GetOnepasswordItemSectionFieldArrayOutput) ToGetOnepasswordItemSectionFieldArrayOutputWithContext(ctx context.Context) GetOnepasswordItemSectionFieldArrayOutput {
	return o
}

func (o GetOnepasswordItemSectionFieldArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOnepasswordItemSectionField] {
	return pulumix.Output[[]GetOnepasswordItemSectionField]{
		OutputState: o.OutputState,
	}
}

func (o GetOnepasswordItemSectionFieldArrayOutput) Index(i pulumi.IntInput) GetOnepasswordItemSectionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnepasswordItemSectionField {
		return vs[0].([]GetOnepasswordItemSectionField)[vs[1].(int)]
	}).(GetOnepasswordItemSectionFieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemPasswordRecipeInput)(nil)).Elem(), OnepasswordItemPasswordRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemPasswordRecipePtrInput)(nil)).Elem(), OnepasswordItemPasswordRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemSectionInput)(nil)).Elem(), OnepasswordItemSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemSectionArrayInput)(nil)).Elem(), OnepasswordItemSectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemSectionFieldInput)(nil)).Elem(), OnepasswordItemSectionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemSectionFieldArrayInput)(nil)).Elem(), OnepasswordItemSectionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemSectionFieldPasswordRecipeInput)(nil)).Elem(), OnepasswordItemSectionFieldPasswordRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnepasswordItemSectionFieldPasswordRecipePtrInput)(nil)).Elem(), OnepasswordItemSectionFieldPasswordRecipeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnepasswordItemSectionInput)(nil)).Elem(), GetOnepasswordItemSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnepasswordItemSectionArrayInput)(nil)).Elem(), GetOnepasswordItemSectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnepasswordItemSectionFieldInput)(nil)).Elem(), GetOnepasswordItemSectionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnepasswordItemSectionFieldArrayInput)(nil)).Elem(), GetOnepasswordItemSectionFieldArray{})
	pulumi.RegisterOutputType(OnepasswordItemPasswordRecipeOutput{})
	pulumi.RegisterOutputType(OnepasswordItemPasswordRecipePtrOutput{})
	pulumi.RegisterOutputType(OnepasswordItemSectionOutput{})
	pulumi.RegisterOutputType(OnepasswordItemSectionArrayOutput{})
	pulumi.RegisterOutputType(OnepasswordItemSectionFieldOutput{})
	pulumi.RegisterOutputType(OnepasswordItemSectionFieldArrayOutput{})
	pulumi.RegisterOutputType(OnepasswordItemSectionFieldPasswordRecipeOutput{})
	pulumi.RegisterOutputType(OnepasswordItemSectionFieldPasswordRecipePtrOutput{})
	pulumi.RegisterOutputType(GetOnepasswordItemSectionOutput{})
	pulumi.RegisterOutputType(GetOnepasswordItemSectionArrayOutput{})
	pulumi.RegisterOutputType(GetOnepasswordItemSectionFieldOutput{})
	pulumi.RegisterOutputType(GetOnepasswordItemSectionFieldArrayOutput{})
}
